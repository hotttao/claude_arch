// Code generated by Kitex v0.15.0. DO NOT EDIT.

package strategy

import (
	"context"

	"github.com/cloudwego/prutal"
)

type QueryStrategySelectedReq struct {
	DataDate string `protobuf:"bytes,1,opt,name=data_date" json:"data_date,omitempty"`
	Strategy string `protobuf:"bytes,2,opt,name=strategy" json:"strategy,omitempty"`
}

func (x *QueryStrategySelectedReq) Reset() { *x = QueryStrategySelectedReq{} }

func (x *QueryStrategySelectedReq) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *QueryStrategySelectedReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *QueryStrategySelectedReq) GetDataDate() string {
	if x != nil {
		return x.DataDate
	}
	return ""
}

func (x *QueryStrategySelectedReq) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

type QueryStrategySelectedRes struct {
	Symbols []string `protobuf:"bytes,1,rep,name=symbols" json:"symbols,omitempty"`
}

func (x *QueryStrategySelectedRes) Reset() { *x = QueryStrategySelectedRes{} }

func (x *QueryStrategySelectedRes) Marshal(in []byte) ([]byte, error) {
	return prutal.MarshalAppend(in, x)
}

func (x *QueryStrategySelectedRes) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *QueryStrategySelectedRes) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type StrategyService interface {
	QueryStrategySelected(ctx context.Context, req *QueryStrategySelectedReq) (res *QueryStrategySelectedRes, err error)
}
